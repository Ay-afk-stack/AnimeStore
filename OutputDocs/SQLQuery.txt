CREATE TABLE admin_table (
  admin_id INT(11) NOT NULL AUTO_INCREMENT,
  admin_name VARCHAR(100) NOT NULL,
  admin_email VARCHAR(200) NOT NULL,
  admin_password VARCHAR(255) NOT NULL,
  PRIMARY KEY (admin_id)
);

CREATE TABLE categories (
  category_id INT(11) NOT NULL AUTO_INCREMENT,
  category_title VARCHAR(255) NOT NULL,
  PRIMARY KEY (category_id)
);

CREATE TABLE user_table (
  user_id INT(11) NOT NULL AUTO_INCREMENT,
  username VARCHAR(100) NOT NULL,
  user_email VARCHAR(255) NOT NULL,
  user_password VARCHAR(255) NOT NULL,
  user_image VARCHAR(255) NOT NULL,
  user_ip VARCHAR(255) NOT NULL,
  user_address VARCHAR(255) NOT NULL,
  user_mobile VARCHAR(20) NOT NULL,
  PRIMARY KEY (user_id)
);

CREATE TABLE products (
  product_id INT(11) NOT NULL AUTO_INCREMENT,
  product_name VARCHAR(255) NOT NULL,
  product_description VARCHAR(255) NOT NULL,
  product_keywords VARCHAR(255) NOT NULL,
  category_id INT(11) NOT NULL,
  product_image1 VARCHAR(255) NOT NULL,
  product_image2 VARCHAR(255) NOT NULL,
  product_image3 VARCHAR(255) NOT NULL,
  product_price VARCHAR(255) NOT NULL,
  date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  status VARCHAR(255) NOT NULL,
  PRIMARY KEY (product_id),
  FOREIGN KEY (category_id) REFERENCES categories(category_id)
);

CREATE TABLE cart_details (
  product_id INT(11) NOT NULL,
  user_id INT(11) NOT NULL,
  quantity INT(11) NOT NULL,
  PRIMARY KEY (product_id, user_id),
  FOREIGN KEY (product_id) REFERENCES products(product_id),
  FOREIGN KEY (user_id) REFERENCES user_table(user_id)
);

CREATE TABLE contact_table (
  email VARCHAR(255) NOT NULL,
  mobile VARCHAR(255) NOT NULL,
  message VARCHAR(255) NOT NULL,
  user_id INT(11) NOT NULL,
  PRIMARY KEY (user_id),
  FOREIGN KEY (user_id) REFERENCES user_table(user_id)
);

CREATE TABLE orders_pending (
  order_id INT(11) NOT NULL AUTO_INCREMENT,
  user_id INT(11) NOT NULL,
  invoice_number INT(255) NOT NULL,
  product_id INT(11) NOT NULL,
  quantity INT(255) NOT NULL,
  order_status VARCHAR(255) NOT NULL,
  PRIMARY KEY (order_id),
  FOREIGN KEY (user_id) REFERENCES user_table(user_id),
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE ratings (
  id INT(11) NOT NULL AUTO_INCREMENT,
  user_id INT(11),
  product_id INT(11),
  rating TINYINT(4) DEFAULT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES user_table(user_id),
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE user_orders (
  order_id INT(11) NOT NULL AUTO_INCREMENT,
  user_id INT(11) NOT NULL,
  amount_due INT(255) NOT NULL,
  invoice_number INT(255) NOT NULL,
  total_products INT(255) NOT NULL,
  order_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  order_status VARCHAR(255) NOT NULL,
  PRIMARY KEY (order_id),
  FOREIGN KEY (user_id) REFERENCES user_table(user_id)
);

CREATE TABLE user_payments (
  payment_id INT(11) NOT NULL AUTO_INCREMENT,
  order_id INT(11) NOT NULL,
  invoice_number INT(11) NOT NULL,
  amount INT(11) NOT NULL,
  payment_mode VARCHAR(255) NOT NULL,
  date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (payment_id),
  FOREIGN KEY (order_id) REFERENCES user_orders(order_id)
);
